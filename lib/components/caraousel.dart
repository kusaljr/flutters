import 'dart:convert';

import 'package:carousel_slider/carousel_slider.dart';
import 'package:flutter/material.dart';
import 'package:new_app/models/News_model.dart';
import 'package:http/http.dart' as http;

Future<Autogenerated> fetchAlbum() async {
  final response = await http.get(Uri.parse(
      'https://newsapi.org/v2/everything?q=Premier%20League&from=2022-01-25&to=2022-01-26&sortBy=popularity&apiKey=ac2abb4abbda48bea9626736ef22249e'));

  if (response.statusCode == 200) {
    // If the server did return a 200 OK response,
    // then parse the JSON.
    return Autogenerated.fromJson(jsonDecode(response.body));
  } else {
    // If the server did not return a 200 OK response,
    // then throw an exception.
    throw Exception('Failed to load album');
  }
}

class NewsCaraousel extends StatefulWidget {
  const NewsCaraousel({Key? key}) : super(key: key);

  @override
  _NewsCaraouselState createState() => _NewsCaraouselState();
}

class _NewsCaraouselState extends State<NewsCaraousel> {
  late Future<Autogenerated> futureArticles;

  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    futureArticles = fetchAlbum();
  }

  @override
  Widget build(BuildContext context) {
    return FutureBuilder<Autogenerated>(
      future: futureArticles,
      builder: (context, AsyncSnapshot snapshot) {
        if (snapshot.hasData) {
          return CarouselSlider(
            options: CarouselOptions(
              height: 250.0,
            ),
            items: [1, 2, 3, 4, 5].map((i) {
              return Builder(
                builder: (BuildContext context) {
                  return Container(
                    margin: const EdgeInsets.symmetric(horizontal: 5),
                    child: Stack(
                      children: [
                        ClipRRect(
                          borderRadius: BorderRadius.circular(20),
                          child: Image(
                            fit: BoxFit.cover,
                            image: NetworkImage(
                                snapshot.data.articles[i].urlToImage),
                            height: 250,
                            // width: MediaQuery.of(context).size.width,
                          ),
                        ),
                        Container(
                          width: MediaQuery.of(context).size.width,
                          margin: const EdgeInsets.symmetric(horizontal: 5.0),
                          decoration: BoxDecoration(
                              gradient: const LinearGradient(
                                begin: Alignment.topCenter,
                                end: Alignment.bottomCenter,
                                colors: [
                                  Color(0xCC000000),
                                  Color(0x00000000),
                                  Color(0x00000000),
                                  Color(0xCC000000),
                                ],
                              ),
                              // image: DecorationImage(
                              //     colorFilter: new ColorFilter.mode(
                              //         Colors.black, BlendMode.dstATop),
                              //     image: NetworkImage(news.image),
                              //     fit: BoxFit.cover),
                              borderRadius: BorderRadius.circular(20)),
                        ),
                        Align(
                            alignment: Alignment.bottomCenter,
                            child: Container(
                              padding: const EdgeInsets.all(20),
                              child: Text(
                                snapshot.data.articles[i].title,
                                style: const TextStyle(
                                    fontSize: 13, color: Colors.white),
                              ),
                            ))
                      ],
                    ),
                  );
                },
              );
            }).toList(),
          );
        } else if (snapshot.hasError) {
          return Text('${snapshot.error}');
        }

        // By default, show a loading spinner.
        return const CircularProgressIndicator();
      },
    );
  }
}
